#!/bin/bash

# This is for WAD Spring 2023.

if [[ $# -ne 1 ]]; then
  echo "Usage: $0 <app-name>"
  exit 1
fi

if [[ -e $1 ]]; then
  read -p "$1 already exists. Do you want to overwrite (y/n)? " ans
  if [[ $ans == "y" ]]; then
    rm -rf $1
  else
    exit 1
  fi
fi

mkdir $1
cd $1
python3 -m venv env
if [[ -e env/bin ]]; then
    source env/bin/activate
else
    source env/Scripts/activate
fi

pip install Flask
pip install requests
pip install Flask-SQLAlchemy
pip install SQLAlchemy

cat >models.py <<MODELS_EOF
# Set up the DB using the following commands:
# $ python
# > from app import db
# > db.create_all()
# > from models import User
# > admin = User(username='admin', email='admin@example.com')
# > db.session.add(admin)
# > db.session.commit()
# > User.query.all()

from app import db                                                        

# Example class
class User(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    username = db.Column(db.String(80), unique=True, nullable=False)
    email = db.Column(db.String(120), unique=False, nullable=False)

    def __repr__(self):
        return '<User %r>' % self.username
MODELS_EOF

cat >app.py <<SERVER_EOF
from flask import (
    abort, Flask, jsonify, redirect, render_template, request,
    session, url_for
)
from flask_sqlalchemy import SQLAlchemy
import os 

app = Flask(__name__)
app.secret_key = b'REPLACE_ME_x#pi*CO0@^z_beep_beep_boop_boop'

sqlite_uri = 'sqlite:///' + os.path.abspath(os.path.curdir) + '/test.db'
app.config['SQLALCHEMY_DATABASE_URI'] = sqlite_uri
app.config['SQLALCHEMY_TRACK_MODIFICATIONS'] = False
db = SQLAlchemy(app)

from models import User

@app.route('/')
def index():
    return 'Results of GET /'
SERVER_EOF


cat >appclient.py <<CLIENT_EOF
import requests
from sys import argv

port = 5000
if len(argv) > 1:
    port = int(argv[1])

r = requests.get('http://localhost:{}/'.format(port))
print(r.text)
CLIENT_EOF

mkdir templates
mkdir -p static/js
mkdir static/css
mkdir static/img

echo "----------------------------"
echo "$1 created. To get started,"
echo "cd $1 && source env/bin/activate"
echo "Then, to run your app,"
echo "flask run"

